name: Roman Converter CI/CD

# Necesitamos permisos de escritura para el contenido del repositorio
permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run HTMLHint
        run: |
          echo "Installing HTMLHint..."
          sudo npm install -g htmlhint
          htmlhint index.html test.html || true

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run html-proofer
        run: |
          echo "Installing Ruby and html-proofer..."
          sudo apt-get update
          sudo apt-get install -y ruby-full build-essential
          sudo gem install html-proofer
          echo "Running html-proofer..."
          htmlproofer . --disable-external || true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build project
        run: |
          echo "Running static build step..."
          mkdir -p _site
          cp index.html test.html tests.js _site/
          echo "Build complete. Files copied to ./_site"
      
      # Crear una carpeta .nojekyll para indicar que no es un sitio Jekyll
      - name: Add .nojekyll file
        run: touch _site/.nojekyll
      
      # Comprimir los archivos para que el job de deploy pueda descargarlos
      - name: Create artifact
        run: |
          cd _site
          tar -czvf ../site.tar.gz *
          cd ..
      
      # Usar cache para pasar archivos entre jobs
      - name: Store built site
        uses: actions/cache@v3
        with:
          path: site.tar.gz
          key: site-${{ github.run_id }}-${{ github.run_number }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout repositorio en la rama principal primero
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Recuperar archivos del cache
      - name: Restore built site
        uses: actions/cache@v3
        with:
          path: site.tar.gz
          key: site-${{ github.run_id }}-${{ github.run_number }}
      
      # Extraer archivos
      - name: Extract site
        run: |
          mkdir -p _site
          tar -xzvf site.tar.gz -C _site
      
      # Despliegue a la rama gh-pages
      - name: Deploy to GitHub Pages
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Crear o limpiar la rama gh-pages
          git checkout --orphan gh-pages
          git reset --hard
          
          # Copiar los archivos del sitio
          cp -r _site/* .
          
          # Agregar .nojekyll para deshabilitar procesamiento Jekyll
          touch .nojekyll
          
          # Eliminar la carpeta _site
          rm -rf _site
          
          # Añadir todos los archivos
          git add .
          
          # Hacer commit y push
          git commit -m "Deploy to GitHub Pages"
          git push -f origin gh-pages
          
          # Mostrar la URL del sitio desplegado
          SITE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "::notice title=GitHub Pages URL::$SITE_URL"
          echo "======================= INFORMACIÓN IMPORTANTE ======================="
          echo "Tu sitio está publicado en: $SITE_URL"
          echo "Puede tardar unos minutos en estar disponible."
          echo "=================================================================="
